[ { "title": "敏行 Android 端项目重构", "url": "/articale/2021/04/28/mx-project-refactor/", "categories": "articale", "tags": "technology", "date": "2021-04-28 23:21:19 +0800", "snippet": "网络模块后端 API 接口请求HttpClient 和 AndroidHttpClient 实现其本质为添加请求头文件上传与下载HttpUrlConnection 和 AndroidHttpClient 实现图片加载中的网络请求HttpURLConnection 实现Web 中的网络请求1、 WebView 拦截部分网络请求HttpURLConnection 实现2、Web 调试时下载资源WebSocket重构过程1、隔离层抽取HttpRequestHttpResponseHttpConfigHttpAdapter2、调用方式收敛原有调用方式标记为 Deprecated，统一使用新的调用..." }, { "title": "Java 强软弱虚引用及引用队列", "url": "/java/2021/04/21/java-reference-and-rq/", "categories": "java", "tags": "java", "date": "2021-04-21 23:15:08 +0800", "snippet": "四种引用类型强引用 new object/array GC 不回收、内存不足时会 OOM软引用 SoftReference 被软引用引用的对象，只有当内存不足时 GC 才会回收 内存敏感的高速缓存弱引用 WeakReference 被弱引用引用的对象，只要 GC 就会被回收虚引用 PhantomReference 虚引用不引用任何对象 当对象被回收时，可以接收到通知引用队列 ReferenceQueue 引用的对象被回收后，引用会添加到队列中 可通过检查队列中是否有该引用来判断对象是否被回收掉" }, { "title": "Java 类加载与垃圾回收", "url": "/java/2021/04/20/java-class-loader-and-gc/", "categories": "java", "tags": "java", "date": "2021-04-20 10:57:10 +0800", "snippet": "Android 类加载protected Class&amp;lt;?&amp;gt; loadClass(String name, boolean resolve) throws ClassNotFoundException { // 1、如果类已被加载，则直接返回 // First, check if the class has already been loaded Class&amp;lt;?&amp;gt; c = findLoadedClass(name); if (c == null) { try { if (pa..." }, { "title": "Java 数据结构和算法", "url": "/arithmetic/2021/04/13/java-data-structure-arithmetic/", "categories": "arithmetic", "tags": "java", "date": "2021-04-13 21:54:32 +0800", "snippet": "数据结构数组ArrayList单链表双链表LinkedList栈先进后出队列算法数组排序相关1、冒泡2、快排数组其他1、twosum 暴力法 借助 HashMap链表相关1、链表是否有环 暴力法 借助 HashMap（参考 HashSet 实现） 快慢指针法2、两个链表是否相交 暴力法 借助 HashMap（参考 HashSet 实现） 将其中任一链表头尾相连，然后判断另一个链表是否有环 求出两个链表的长度差 n，长链表先走 n 步，然后短链表开始走，如果相交，则 m 步后两者指向同一个元素" }, { "title": "HTTP 和 HTTPS", "url": "/net/2021/04/09/http-and-https/", "categories": "net", "tags": "net", "date": "2021-04-09 09:00:07 +0800", "snippet": "HTTP是什么超文本传输协议三次握手建立一个 TCP 连接时，客户端和服务端一共需要发送 3 个包。三次握手的主要作用是确认双方的发送能力和接收能力是否正常、指定自己的初始化序列号为后面的可靠性传输做准备。实质上就是连接服务器指定的端口号，建立 TCP 连接，并同步连接双方的序列号和确认号，交换 TCP 窗口大小信息。1、三次握手过程一开始的时候，client 处于 closed 状态；server 处于 listen 状态。进行三次握手： 第一次：客户端给服务端发一个 SYN 报文，同时指明客户端的 ISN，此时客户端处于 SYN_SENT 状态。 第二次：服务端收到客户端的 SY..." }, { "title": "Java 线程池", "url": "/java/2021/04/07/java-thread-pool/", "categories": "java", "tags": "java", "date": "2021-04-07 22:43:32 +0800", "snippet": "核心参数解析核心线程非核心线程及存活时间任务队列线程工厂拒绝策略默认实现有四种: CallerRunsPolicy AbortPolicy DiscardPolicy DiscardOldestPolicy 任务提交@Override public void execute(Runnable command) { // 不可提交空任务 if (command == null) throw new NullPointerException(); int c = ctl.get(); // 工作线程数目小于核心线程..." }, { "title": "Java 面向对象特征与原则", "url": "/java/2021/04/06/java-oop-principles/", "categories": "java", "tags": "java", "date": "2021-04-06 21:43:00 +0800", "snippet": "面向对象三大特征封装属性、方法、安全、简化编程继承子类继承父类/实现接口、父类的属性多态多实现、方法重载/重写、强转面向对象五大原则职责单一原则一个类应该仅有一个引起它变化的原因开闭原则对扩展是开放的，对修改是关闭的里氏替换原则基类出现的地方，子类一定可以出现子类可以替换父类并且出现在父类能够出现的任何地方面向接口编程依赖倒置原则低层依赖高层，实现依赖抽象接口隔离原则使用多个专门的接口比使用单个接口要好迪米特法则认识的人尽可能少" }, { "title": "Java 并发容器之 ConcurrentHashMap（java 8）", "url": "/java/2021/04/05/java-concurrent-hashmap/", "categories": "java", "tags": "java", "date": "2021-04-05 22:50:35 +0800", "snippet": "#put() 方法public V put(K key, V value) { // 插入数据 return putVal(key, value, false);}final V putVal(K key, V value, boolean onlyIfAbsent) { // key 和 value 均不能为 null，HashMap key 和 value 均可为 null if (key == null || value == null) throw new NullPointerException(); // 计算 hash 值，比 HashMap ..." }, { "title": "Java 容器之 HashMap（java 8）", "url": "/java/2021/02/19/java-hashmap/", "categories": "java", "tags": "java", "date": "2021-02-19 21:17:56 +0800", "snippet": "重要的字段transient Node&amp;lt;K,V&amp;gt;[] table首次使用时才初始化，在 resize() 中重新初始化，数组长度为 0 或 2 的 n 次方transient int sizemap 的大小即键值对的个数final float loadFactor加载因子，用于 hash 表扩容transient int threshold下次数组扩容时的临界值，当达到此临界值时需要对 hash 表进行扩容（capacity * loadFactor）HashMap#put() 方法作用：添加元素public V put(K key, V value) { ..." }, { "title": "Android 输入子系统3：InputDispatcher 对事件分发", "url": "/android/2021/02/02/andorid-input-subsystem-3/", "categories": "android", "tags": "android, framework", "date": "2021-02-02 10:57:35 +0800", "snippet": "涉及到的源代码及路径：frameworks/base/core/java/android/view/WindowManagerImpl.javaframeworks/base/core/java/android/view/WindowManagerGlobal.javaframeworks/base/core/java/android/view/ViewRootImpl.javaframeworks/base/services/core/java/com/android/server/wm/Session.javaframeworks/base/services/core/java/co..." }, { "title": "Android 输入子系统2：EventHub 工作原理", "url": "/android/2021/01/28/android-input-subsystem-2/", "categories": "android", "tags": "android, framework", "date": "2021-01-28 10:56:13 +0800", "snippet": "涉及到的源代码及路径：frameworks/native/services/inputflinger/EventHub.cppframeworks/native/services/inputflinger/InputReader.cppframeworks/native/services/inputflinger/InputDispatcher.cppframeworks/native/libs/input/InputTransport.cppframeworks/base/core/jni/android_view_InputChannel.cppframeworks/base/cor..." }, { "title": "linux inotify 机制", "url": "/linux/2021/01/24/linux-inotify-mechanism/", "categories": "linux", "tags": "linux", "date": "2021-01-24 21:08:41 +0800", "snippet": "基本描述inotify 是 Linux 内核提供的文件系统变化的通知机制，可以用来监控文件系统的变化，如文件的新建、删除、读写等。使用1、int inotify_init(void)调用该方法创建一个 inotify 对象，返回一个与新的 inotify 事件队列关联的 fd，返回 -1 表示失败2、int inotify_add_watch(int fd, const char *pathname, uint32_t mask)调用该方法将一个或多个监听添加到 inotify 对象中，或者修改已存在的监听对象；返回 -1 表示失败，返回非负数表示成功fd 参数表示 inotify_in..." }, { "title": "linux epoll 机制", "url": "/linux/2021/01/22/linux-epoll-mechanism/", "categories": "linux", "tags": "technology", "date": "2021-01-22 22:06:30 +0800", "snippet": "一次监听多个 fd 的可读/可写状态基本概念epoll：是一种 I/O 时间通信机制，是 Linux 内核实现 IO 多路复用的一种方式。IO 多路复用：在一个操作里同时监听多个输入输出源，在其中一个或多个输入输出源可用的时候返回，然后对其进行读写操作。输入输出源：可以是文件（file）、网络（socket）、进程间的管道（pipe），因在 Linux 中“一切皆文件”，所以都是用文件描述符（fd）来表示可读事件：当 fd 关联的内核缓冲区非空有数据可读时，则触发可读事件；可写事件：当 fd 关联的内核缓冲区不满有空闲空间可写时，则触发可写事件；通知机制：当事件发生时，主动通知；轮询机制..." }, { "title": "Android 输入子系统1：IMS 初始化与启动", "url": "/android/2021/01/22/android-input-subsystem-1/", "categories": "android", "tags": "android, framework", "date": "2021-01-22 15:25:35 +0800", "snippet": "Android 输入子系统将分为以下 5 个小节完成：1、IMS 与 WMS 初始化与启动：关联、InputMethodService；2、EventHub 工作原理：InputReader；3、InputDispatcher 对事件分发： InputTransport；4、接收输入事件并分发：ViewRootImpl#InputEventReceiver；5、ViewRootImpl 把输入事件传递到 View 层级中本文分析 IMS 的实例化与启动，涉及到的源代码及路径：frameworks/base/services/java/com/android/server/SystemSe..." }, { "title": "Android pm 命令使用文档", "url": "/android/2021/01/11/android-pm-doc/", "categories": "android", "tags": "tools, android", "date": "2021-01-11 15:55:30 +0800", "snippet": "adb shell pmPackage manager (package) commands: help Print this help text. path [--user USER_ID] PACKAGE Print the path to the .apk of the given PACKAGE. dump PACKAGE Print various system state associated with the given PACKAGE. list features Prints all features of the system. ha..." }, { "title": "Android binder 架构： java 层", "url": "/android/2021/01/08/android-binder-architecture-2/", "categories": "android", "tags": "android, framework", "date": "2021-01-08 13:09:34 +0800", "snippet": "涉及到的源码及路径：frameworks/base/core/java/android/os/IBinder.javaframeworks/base/core/java/android/os/Binder.javaframeworks/base/core/java/android/os/IInterface.javaframeworks/base/core/java/com/android/internal/os/BinderInternal.javaframeworks/base/services/java/com/android/server/SystemServer.javafra..." }, { "title": "实战：使用 Binder 机制实现 C/S 架构", "url": "/android/2021/01/04/android-implement-a-native-service/", "categories": "android", "tags": "android, framework", "date": "2021-01-04 20:53:51 +0800", "snippet": "第一种：native 层实现声明 service 业务接口#ifndef ANDROID_ITESTSERVICE_H#define ANDROID_ITESTSERVICE_H#include &amp;lt;binder/IInterface.h&amp;gt;#include &amp;lt;binder/Parcel.h&amp;gt;// 命名空间为 androidnamespace android {// 声明业务接口，子类实现接口处理具体业务class ITest : public IInterface {public: // !!一定不要忘记了这里!! DEC..." }, { "title": "Camera Service", "url": "/android/2020/12/16/camera-service/", "categories": "android", "tags": "camera", "date": "2020-12-16 22:55:43 +0800", "snippet": "Java 层CameraManager:openCamera() -&amp;gt; openCameraForUid() -&amp;gt; openCameraDeviceUserAsync() -&amp;gt; 构造 CameraDeviceImpl deviceImpl = new CameraDeviceImpl(); 如果支持 camera2 则：2.1 ICameraService cameraService = CameraManagerGlobal.get().getCameraService();否则：2.2 CameraDeviceUserShim.conne..." }, { "title": "Java NIO 一览", "url": "/java/2020/12/12/java-nio/", "categories": "java", "tags": "nio", "date": "2020-12-12 20:34:26 +0800", "snippet": "NIO 概述Java 层面：new ioOS 层面：non-blocking io核心组成 Channels FileChannel: 从文件中读写数据 DatagramChannel: 能通过UDP读写网络中的数据 SocketChannel: 能通过TCP读写网络中的数据 ServerSocketChannel: 可以监听新进来的TCP连接，像Web服务器那样。对每一个新进来的连接都会创建一个SocketChannel Buffers ByteBuffer CharBuffer Do..." }, { "title": "解决访问 githug pages tags 404 问题", "url": "/git/2020/12/11/how-to-resolve-tags-404-in-gitpages/", "categories": "git", "tags": "gitpages", "date": "2020-12-11 21:09:46 +0800", "snippet": "问题是如何出现的使用 github workflow 自动发布 gitpages 时，出现了网站发布后访问 tags 404 not found 问题出现问题的原因github 为了安全问题，不会执行自定义的 plugin，即_plugins 目录下的 rb 文件，所以 tags 下的index.html 文件访问不了探究过哪些解决办法 使用网上提供的发布脚本：JamesIves/github-pages-deploy-action@3.7.1； 自己修改过 .github/workflow/pages-deploy.yml 文件但最终也未生效；最终如何解决自己编写脚本在本地发布，脚..." }, { "title": "Android Service 系列", "url": "/android/2020/12/08/android-service-outline/", "categories": "android", "tags": "android, framework", "date": "2020-12-08 14:20:43 +0800", "snippet": "Service 概述Service 使用 start 方式 bind 方式前台服务与后台服务 前台服务 后台服务常见问题源码分析 开启服务 绑定服务" }, { "title": "Android 知识体系索引", "url": "/book/2020/12/02/readme-android/", "categories": "book", "tags": "book, android", "date": "2020-12-02 10:19:11 +0800", "snippet": "AOSP 基础 源码下载并编译 AOSP 编译系统、工具 编译导入 ide 所需的文件 分支管理framework 层 面试总结 app启动流程分析(一)从点击桌面图标到 ActivityThread 的 main() 方法执行 app启动流程分析(二)从 ActivityThread 的 main() 方法执行到页面显示 app启动流程分析(三)AndroidManifest.xml 文件解析 Activity 生命周期源码分析 ContentProvider 源码分析 BroadcastReceiver 源码分析 Service 源码分析 Service ..." }, { "title": "Android 开发高手课索引", "url": "/book/2020/12/02/readme-android-enhance/", "categories": "book", "tags": "book, android", "date": "2020-12-02 10:19:11 +0800", "snippet": "Android 开发高手课 专栏： Android 开发高手课 讲师：张邵文 前微信高级工程师，Tinker 负责人 课后作业地址: https://github.com/AndroidAdvanceWithGeektime一、高质量开发 崩溃 内存 4G 时代的内存优化 从哪里着手 卡顿 卡顿分析方法 监控应用卡顿 卡顿现场与卡顿分析 启动 app 启动过程 启动速度进阶 Android JVM TI 机制详解 IO io 优..." }, { "title": "java-socket", "url": "/java/2020/12/02/java-socket/", "categories": "java", "tags": "java, net", "date": "2020-12-02 10:19:11 +0800", "snippet": "Socket 编程 参考 Socket 编程" }, { "title": "java 核心 36 讲", "url": "/book/2020/12/02/java-36-core-outline/", "categories": "book", "tags": "book, java-core", "date": "2020-12-02 10:19:11 +0800", "snippet": "Java 核心 36 讲 专栏： Java 核心技术 36 讲 讲师：杨晓峰 前 Oracle 首席工程师一、java 基础 Exception 和 Error final、finally 和 finalize 强、软、弱、幻象引用 动态代理 int 和 Integer Vector、ArrayList 和 LinkedList HashTable、HashMap 和 TreeMap 集合线程安全、ConcurrentHashMap java 中的 io 方式 文件拷贝 接口和抽象类 设计模式二、java 进阶 synchronized 和 Reentrant..." }, { "title": "at-provider-lifecycle", "url": "/android/2020/12/02/android-content-provider/", "categories": "android", "tags": "android, framework", "date": "2020-12-02 10:19:11 +0800", "snippet": "ActivityThread 中 Provider 生命周期bindApplication() bindApplication() -&amp;gt; mH.sendMessage(H.BIND_APPLICATION) -&amp;gt; handleBindApplication()handleBindApplication()设置 AsyncTask 执行任务的线程池// If the app is Honeycomb MR1 or earlier, switch its AsyncTask// implementation to use the pool executor. ..." }, { "title": "Android anr 原理及分类", "url": "/android/2020/12/02/android-anr/", "categories": "android", "tags": "android", "date": "2020-12-02 10:19:11 +0800", "snippet": "anr 原理anr 分类input 超时普通：5000msInstrumentation：60000ms由 InputDispatcher 分发事件时上报—&amp;gt; native 层InputDispatcherThread::threadLoop() -&amp;gt;InputDispatcher::dispatchOnce() -&amp;gt; dispatchOnceInnerLocked() -&amp;gt;dispatchMotionLocked() -&amp;gt; findTouchedWindowTargetsLocked() -&amp;gt;handl..." }, { "title": "Service 源码分析", "url": "/android/2020/12/01/android-service/", "categories": "android", "tags": "android, framework", "date": "2020-12-01 10:31:07 +0800", "snippet": "开启服务startService()// Context.startService() -&amp;gt; ContextImpl.startServiceCommon() -[IPC 到 SystemServer 进程]-&amp;gt; // AMS.startService() -&amp;gt; ActiveServices.startServiceLocked() -&amp;gt; // [retreiveServiceLocked(): ServiceLookupResult -&amp;gt;] AMS.startServiceInnerLocked() -&amp;gt..." }, { "title": "at-receiver-lifecycle", "url": "/android/2020/12/01/android-broadcast-receiver/", "categories": "android", "tags": "android, framework", "date": "2020-12-01 10:31:07 +0800", "snippet": "ActivityThread 中 Service 生命周期" }, { "title": "at-activity-lifecycle", "url": "/android/2020/12/01/android-activity-lifecycle/", "categories": "android", "tags": "android, framework", "date": "2020-12-01 10:31:07 +0800", "snippet": "ActivityThread 中 Activity 生命周期 handleLaunchActivity() -&amp;gt; handleStartActivity() -&amp;gt; handleResumeActivity() -&amp;gt; handlePauseActivity() -&amp;gt; handleStopActivity() -&amp;gt; handleDestroyActivity() performRestartActivity()handleLaunchActivity (ActivityClientRecord r, Pending..." }, { "title": "Ubuntu 下通过源码安装 vim", "url": "/linux/2020/11/27/linux-install-vim-from-source/", "categories": "linux", "tags": "linux, tools", "date": "2020-11-27 19:04:11 +0800", "snippet": "源码编译安装 vim 最新版本下载源码 git clone git@github.com:vim/vim.git编译前进行配置（若无特殊需求，可跳过此步骤） ./configure --enable-multibyte --enable-python3interp --enable-pythoninterp --with-features=huge 若需重新配置需在源码目录下执行 make distclean编译 make clean安装 sudo make install" }, { "title": "Java/Android 多线程与并发", "url": "/java/2020/11/26/multi-thread-and-concurrence/", "categories": "java", "tags": "java", "date": "2020-11-26 17:41:22 +0800", "snippet": "基本概念进程资源分配和调度的最基本单位；一个程序加载到内存中，OS 分配给这个程序一些资源（内存）和一个序列号（pid）；程序是指令、数据及其组织形式的描述，进程是程序的实体。线程是 OS 能够进行运算调度的基本单元；JMMJMM(Java Memory Model) 规定：1、所有变量都存储在主内存中；2、每个线程都有自己的工作内存，用来保存该线程用到的主内存中的变量的拷贝副本；3、线程对变量的所有操作都必须在工作内存中进行，不能直接操作主内存；4、不同的线程无法直接访问彼此的工作内存，线程间变量的传递需要自己的工作内存和主内存之间进行数据同步总结：JMM 是一种规范，目的是解决由于多..." }, { "title": "Ubuntu 下安装 ycmd", "url": "/linux/2020/11/26/linux-install-ycmd/", "categories": "linux", "tags": "linux, tools", "date": "2020-11-26 17:41:22 +0800", "snippet": "Ubuntu 18.04 安装 ycm 参考 YouCompleteMe#installation下载 Vundle git clole https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim下载 YCM git clone git@github.com:ycm-core/YouCompleteMe.git ~/.vim/bundle/YouCompleteMe cd ~/.vim/bundle/YouCompleteMe &amp;amp;&amp;amp; git submodule updat..." }, { "title": "build-tools-aapt", "url": "/android/2020/11/05/build-tools-aapt/", "categories": "android", "tags": "tools, android", "date": "2020-11-05 22:48:15 +0800", "snippet": "Android Asset Packaging ToolUsage: aapt l[ist] [-v] [-a] file.{zip,jar,apk} List contents of Zip-compatible archive. aapt d[ump] [--values] [--include-meta-data] WHAT file.{apk} [asset [asset ...]] strings Print the contents of the resource table string pool in the APK. badging ..." }, { "title": "《Android 性能优化实践》", "url": "/book/2020/11/05/android-performance-optimization/", "categories": "book", "tags": "android", "date": "2020-11-05 18:07:46 +0800", "snippet": "" }, { "title": "《Android 插件化开发指南》", "url": "/book/2020/10/22/android-pluginization-dev/", "categories": "book", "tags": "android", "date": "2020-10-22 02:28:30 +0800", "snippet": "" }, { "title": "The Alchemist", "url": "/english/2020/07/29/ehglish-book-the-alchemist/", "categories": "english", "tags": "english", "date": "2020-07-29 07:23:54 +0800", "snippet": " bearable 英 [ˈbeərəbl] 美 [ˈberəbl]adj. 可忍受的；支持得住的A cool breeze made the heat bearable.一阵凉爽的微风使得炎热可以忍受。She was the only thing that made life bearable.只因有了她生活才可以过得下去。BAA and the government think that because aircraft are getting quieter and cleaner the extra flights will be bearable.英国机场管理局以及政府..." }, { "title": "git 常见问题", "url": "/git/2020/07/23/common-questions/", "categories": "git", "tags": "git", "date": "2020-07-23 18:33:08 +0800", "snippet": "git 常见问题 git pull 出现 fatal: refusing to merge unrelated histories 错误 原因：远端认为你正在‘pull’的库和本地的库没有任何关联，所以无法 merge解决一： 1，删除本地仓库中的 .git 目录； 2，从远端把库拉下来，然后将相关的文件拷贝到本地相应的库目录中； 3，提交，推送。解决二： 1，执行 git pull origin master --allow-unrelated-histories 命令； 2，如果有冲突，则解决冲突； 3，提交，推送。 在git中出现中文乱码的解决..." }, { "title": "vim 使用技巧", "url": "/linux/2020/07/21/vim-skill/", "categories": "linux", "tags": "linux, tools", "date": "2020-07-21 00:59:19 +0800", "snippet": "编辑 撤销：普通模式下输入 u； 插入：普通模式下在 光标处输入i在光标后插入，任意位置输入o新行插入； 删除：普通模式下光标放在待删除行，dd 即可删除； 复制行： 普通模式下输入 yy 复制光标所在行； 普通模式下输入 nyy 复制光标所在的向下 n 行； 粘贴行： p 将已复制的数据在光标下一行粘贴； P 将已复制的数据在光标上一行粘贴； 其他 选择：普通模式下输入 v 进入 visual 模式，j/k/l/h 进行移动，输入^ 光标处到行首，输入 $ 光标处到行尾，y 复制，p 粘贴，d 剪..." }, { "title": "about-movie", "url": "/english/2020/07/20/english-about-movie/", "categories": "english", "tags": "english", "date": "2020-07-20 06:06:59 +0800", "snippet": "Movies TV play series 电视连续剧I think the TV play series is made up.我认为这部电视连续剧是虚构的。Some TV play series have strange names and incorrect grammatical structures.一些电视连续剧的名字不但奇怪，且语法不通。Grand Mercure Hongqiao Shanghai successfully held the press conference of &quot;Bitter Coffee&quot; TV Play Series B..." }, { "title": "about-health", "url": "/english/2020/07/12/english-about-health/", "categories": "english", "tags": "english", "date": "2020-07-12 19:28:16 +0800", "snippet": "About Health contagious 英 [kənˈteɪdʒəs] 美 [kənˈteɪdʒəs]adj. 感染性的；会蔓延的Scarlet fever is highly contagious.猩红热的接触传染性很强。Laughing is contagious.笑是有感染力的。This disease is not contagious [infectious].这病不传染。 " }, { "title": "Android 中的 uevent", "url": "/android/2020/07/03/uevent/", "categories": "android", "tags": "android, framework", "date": "2020-07-03 21:51:31 +0800", "snippet": "Uevent 是内核通知 android 有状态变化的一种方法，比如USB线插入、拔出，电池电量变化等等。其本质是内核发送（可以通过 socket）一个字符串，应用层（android）接收并解释该字符串，获取相应信息。Kernel uevent 的发起在 linux 内核中，通过函数 int kobject_uevent_env(struct kobject *kobj, enum kobject_action action, char *envp_ext[]) 发送事件Android android 中通过 UEventObserver 来接收 uevent 事件相关源码 fra..." }, { "title": "Clion 配置开发环境", "url": "/android/2020/06/03/clion-dev/", "categories": "android", "tags": "ndk, android", "date": "2020-06-03 02:04:04 +0800", "snippet": "配置如下信息：Build,Excution,Deployment -&amp;gt; CMake -&amp;gt; Profiles-DCMAKE_SYSTEM_NAME=Android-DCMAKE_ANDROID_ARCH_ABI=armeabi-v7a-DCMAKE_ANDROID_NDK=$ANDROID_SDK/ndk/20.0.5594570-DCMAKE_SYSTEM_VERSION=28-DCMAKE_C_FLAGS=&quot;&quot;-DCMAKE_CXX_FLAGS=&quot;&quot;-DCMAKE_ANDROID_NDK_TOOLCHAIN_VERSI..." }, { "title": "蓝牙", "url": "/android/2020/05/29/android-bluetooth/", "categories": "android", "tags": "android, framework", "date": "2020-05-29 01:36:49 +0800", "snippet": "经典蓝牙 bt蓝牙低功耗 ble主设备与从设备 参考文献-1 参考文献-2```六种设备状态待机状态（standby）：设备没有传输和发送数据，并且没有连接到任何设备广播状态（Advertiser）：周期性广播状态扫描状态（Scanner）：主动寻找正在广播的设备发起链接状态（Initiator）：主动向扫描设备发起连接。主设备（Master）：作为主设备连接到其他设备。从设备（Slave）：作为从设备连接到其他设备。五种工作状态准备（standby），广播（advertising），监听扫描（Scanning），发起连接（Initiating），已连接（Connected）四种设备..." }, { "title": "Android JNI 基础", "url": "/android/2020/05/27/android-jni-basic/", "categories": "android", "tags": "ndk, android", "date": "2020-05-27 02:51:20 +0800", "snippet": "JNIJava Native Interface 缩写为 JNI，通过 JNI 可以： java 程序可以调用 native 函数； native 程序可以反向调用 java 函数注意：JNI 层必须实现为动态库的形式，这样 JVM 才能加载并调用 so 中的函数总结：JNI 是连通 java 层和 native 层的桥梁加载动态库与 native 函数声明static { // 加载对应的 JNI 库，name 是库的名称，实际加载时： // linux -&amp;gt; libname_jni.so, windows -&amp;gt; name.dll Sy..." }, { "title": "shell 脚本", "url": "/linux/2020/05/12/shell-script/", "categories": "linux", "tags": "linux, tools", "date": "2020-05-12 22:10:01 +0800", "snippet": "变量 只读变量 # 等号与变量名和值之间不能有空格# 只读变量，不能被重新赋值readonly name=&quot;\\nbinli&quot;# -e 参数可以显示被转移的符号，没有参数会原样输出echo -e $name 删除变量 unset name 语句 if 语句if condition; then # do stufffi for 循环for file in `ls /`; do echo $filedone while 循环i=1max=20sum=0# 注意 [[ $i -le $max ]] 这里必须这么写，否则会报错whil..." }, { "title": "Ubuntu 新系统常用软件安装", "url": "/linux/2020/05/09/setup-a-new-os/", "categories": "linux", "tags": "linux", "date": "2020-05-09 17:28:36 +0800", "snippet": " 常用工具 sudo apt install axel silversearcher-ag openssh-server ssh openssh-client openssh-server tree net-tools 搜狗输入法 cd ~/Downloads/ &amp;amp;&amp;amp; axel -n 10 &quot;http://cdn2.ime.sogou.com/dl/index/1571302197/sogoupinyin_2.3.1.0112_amd64.deb?st=EDsKarP7mjX2oPmtqBOCJ..." }, { "title": "Android binder 架构：native 层", "url": "/android/2020/04/26/android-binder-architecture-1/", "categories": "android", "tags": "android, framework", "date": "2020-04-26 07:54:30 +0800", "snippet": "本文涉及到的源码路径：frameworks/av/media/mediaserver/main_mediaserver.cppframeworks/native/libs/binder/ProcessState.cppframeworks/native/libs/binder/IServiceManager.cppframeworks/native/libs/binder/include/binder/IInterface.hframeworks/native/libs/binder/Binder.cppframeworks/native/libs/binder/include/bind..." }, { "title": "git 常用命令", "url": "/git/2020/04/25/git-commands/", "categories": "git", "tags": "git", "date": "2020-04-25 19:29:23 +0800", "snippet": " 将本地库和远端库关联stash git stash list git stash show stash{$num} git stash save [-u] ‘stash-msg’修改历史提交记录 git commit –amend过滤作者 git log –author=”binli”stash 未提交的文件【-u 包含 untracked 文件】 git stash save -u “save info”列出所有的 stash git stash list查看 stash 内容 git stash showapply stash 最后一次 stash git st..." }, { "title": "Usage of logcat", "url": "/android/2020/03/25/logcat-doc/", "categories": "android", "tags": "tools, android", "date": "2020-03-25 07:25:15 +0800", "snippet": " options include: -s Set default filter to silent. Equivalent to filterspec &#39;*:S&#39; -f , --file= Log to file. Default is stdout -r , --rotate-kbytes= Rotate log every kbytes. Requires -f option -n , --rotate-count= Sets max n..." }, { "title": "adb 使用文档", "url": "/android/2020/03/25/adb-doc/", "categories": "android", "tags": "tools, android", "date": "2020-03-25 07:25:15 +0800", "snippet": "当前工具版本： 1.0.41global options: -a listen on all network interfaces, not just localhost -d use USB device (error if multiple devices connected) -e use TCP/IP device (error if multiple TCP/IP devices available) -s SERIAL use device with given serial (overrides $ANDROID_SERIA..." }, { "title": "Linux C 库函数", "url": "/linux/2020/03/24/library-c-functions/", "categories": "linux", "tags": "linux", "date": "2020-03-24 19:07:20 +0800", "snippet": "字符串操作 long int strtol(const char *str, char **endptr, int base) string to long -&amp;gt; strtol 把参数 str 所指向的字符串根据给定的 base 转换为一个长整数（类型为 long int 型），base 必须介于 2 和 36（包含）之间，或者是特殊值 0 unsigned long int strtoul(const char *str, char **endptr, int base) string to unsigned ..." }, { "title": "about-work", "url": "/english/2020/03/24/english-about-work/", "categories": "english", "tags": "english", "date": "2020-03-24 03:46:10 +0800", "snippet": "About workuseful expressions rush time on workday/weekdaysome work-related words matchable [ˈmætʃəbl]adj. 对等的，匹配的；敌得过的Z Trace this letter first, then color the matchable upper and lower case letters.首先按线描好字母，然后将匹配的字母大小写的框内区域图成相同颜色。We have the matchable product lines, the complete spare part..." }, { "title": "about-transportation", "url": "/english/2020/03/23/english-about-transportation/", "categories": "english", "tags": "english", "date": "2020-03-23 18:36:26 +0800", "snippet": "" }, { "title": "about-eating", "url": "/english/2020/03/23/english-about-eating/", "categories": "english", "tags": "english", "date": "2020-03-23 18:36:26 +0800", "snippet": "" }, { "title": "09-34", "url": "/english/2020/03/22/english-09-34/", "categories": "english", "tags": "english", "date": "2020-03-22 12:32:07 +0800", "snippet": "Level 9 Unit 34Lesson1Grammer the future I can be there by nine PM. That’s in two hours. subordinate clause Is there a place where I can put this down? Yes, it was the day when you had my new design. We can go for a walk when we get to the forest. New..." }, { "title": "09-33", "url": "/english/2020/03/14/english-09-33/", "categories": "english", "tags": "english", "date": "2020-03-14 17:27:22 +0800", "snippet": "Level 9 Unit 33LessonsLesson 1Grammer suggesstion very/really/quite can/could/may I do something?New Words if I see blood, I get very dizzy and faint. the goalie make a save. Its history is incredible. Pacific Ocean Atlantic Ocean debut: the first of/to do something take the field stay..." }, { "title": "学习路线", "url": "/android/2020/03/06/learning-routine/", "categories": "android", "tags": "android", "date": "2020-03-06 05:47:12 +0800", "snippet": "学习路线初级：基础知识巩固常用控件View TextView EditText Button ImageView ImageButton ViewGroup LinearLayout FrameLayout RelativeLayout GridLayout 列表 ListView GridView RecyclerView 四大组件基础知识 Activity 生命周期 启动模式 Intent 标记位 Service BroadcastReceiver ContentProvider Fragmen..." }, { "title": "L05-good-and-bad", "url": "/english/2020/03/02/english-good-and-bad/", "categories": "english", "tags": "english", "date": "2020-03-02 11:59:46 +0800", "snippet": "How to use different words to talk about good and badExpressions amazing/awful fantastic/horrific great/terrible good/bad" }, { "title": "08-32", "url": "/english/2020/02/01/english-08-32/", "categories": "english", "tags": "english", "date": "2020-02-01 02:42:52 +0800", "snippet": "Level 8 Unit 32Lesson 1The xxx Of the front of my jacket the rest of apartment the middle of the bridge the edge of the city is beautiful by the water the roof of our building the color of Mike’s shirt is red the second floor of the building the manager of the department the name of the ..." }, { "title": "adb 使用记录", "url": "/android/2020/02/01/android-usage-of-adb/", "categories": "android", "tags": "tools, android", "date": "2020-02-01 01:00:52 +0800", "snippet": "adb 使用记录 九阳神功总纲 查看可以被 dump 的 service ：dumpsys | grep &quot;DUMP OF SERVICE&quot; dump service # 需要重写 Service#dump(FileDescriptor fd, PrintWriter writer, String[] args) 方法dumpsys activity service package.name/.abs.YourService 系统应用新添加的Activity后跳转报错解决办法（比如Settings应用）：pm install -r syste..." }, { "title": "sports-and-hobbies", "url": "/english/2020/01/04/english-sports-and-hobbies/", "categories": "english", "tags": "english", "date": "2020-01-04 11:13:11 +0800", "snippet": "Sports and Hobbiesplay play golf play baseball play tennis play football play soccer play cricketgo go to the movies go cycling go swimming go dancing" }, { "title": "fashion-and-beauty", "url": "/english/2020/01/04/english-fashion-and-beauty/", "categories": "english", "tags": "english", "date": "2020-01-04 10:37:30 +0800", "snippet": "Fashion and BeautyFashion: what you wear on your body popular clothes elements which are popular among most people jewe Beauty: something about physical body a good face a pretty look or appearence body shape actions buything clothes putting on make-up wearing jew..." }, { "title": "Difference between words that have same meanings", "url": "/english/2019/12/29/english-difference-between-words/", "categories": "english", "tags": "english", "date": "2019-12-29 21:29:40 +0800", "snippet": "small &amp;amp; little — from differencebetweensmall refers to the size only. a word considered to be the opposite of ‘big’ or ‘large’ It is a small house. little is used to express some emotion or sometimes an idea of smallness I have decided to look after the poor little thing. ..." }, { "title": "words", "url": "/english/2019/12/26/english-words/", "categories": "english", "tags": "english", "date": "2019-12-26 06:54:45 +0800", "snippet": "Continents and Oceans Africa Asia South America North America Latin America Europe AntarcticaOthers show her friends a bit of Middle Eastern hospitality main street, the shopping mall downtown, He doesn’t let me make entrees. He doesn’t let me prepare appetizers anymore. You can’t mak..." }, { "title": "readings", "url": "/english/2019/12/25/english-readings/", "categories": "english", "tags": "english", "date": "2019-12-25 07:52:13 +0800", "snippet": "readingsComputer Termsmajor part mouse a small device that you move around on a flat surface in front of a computer pointer, cursor, computer screen a carved block of wood with two metal wheels had a tail at the end which was the wire that connected it to the computer ..." }, { "title": "idioms", "url": "/english/2019/12/23/english-idioms/", "categories": "english", "tags": "english", "date": "2019-12-23 08:09:48 +0800", "snippet": "idiomsplay the fool to do silly things to atract peoples attention and/or make them laughto be used in situations that are informal and fun instances Stop playing the fool!! Everybody is looking at us. He plays the fool when he is around girls. in the same boat" }, { "title": "check-in-a-hotel", "url": "/english/2019/12/23/english-check-in-a-hotel/", "categories": "english", "tags": "english", "date": "2019-12-23 07:37:40 +0800", "snippet": "when you are going on a vacation…hotel arrive at a hotel check in/out at the reception get keys and a room book flights and hotel through internet or in a travel agency hotels generally offer full board(all meals covered), half board(breakfast and launch or dinner) or just breakfast during ..." }, { "title": "a short english story", "url": "/english/2019/12/23/english-calling-story/", "categories": "english", "tags": "english", "date": "2019-12-23 07:37:40 +0800", "snippet": "------------------------------------------------------------ Hi, is that the demolition place?- It is, yeah.- Could you help me to destroy my school, pleace?- Just bear with me a second.- Hello?- Hi.- Well, what school do you go to?- I go to a school in Dublin.- And you want it demolished?- Yeah...." }, { "title": "vold-storaged", "url": "/android/2019/12/12/vold-storaged/", "categories": "android", "tags": "android, framework", "date": "2019-12-12 02:33:10 +0800", "snippet": "vold &amp;amp; storagedstoraged 源码目录：android/system/core/storagedjava 层 StorageManager StorageManagerService $Lifecycle#onStart() mStorageManagerService = new StorageManagerService(getContext()); publishBinderService(“mount”, mStorageManagerService); # 真正的服务名..." }, { "title": "SystemServer", "url": "/android/2019/12/12/system-server/", "categories": "android", "tags": "android, framework", "date": "2019-12-12 02:31:44 +0800", "snippet": "SystemServer" }, { "title": "Ubuntu 下安装 ruby-full", "url": "/linux/2019/12/12/install-ruby-full/", "categories": "linux", "tags": "linux", "date": "2019-12-12 02:31:44 +0800", "snippet": "installation log$ sudo apt-get install ruby-full build-essential zlib1g-dev[sudo] password for user_name: Reading package lists... DoneBuilding dependency tree Reading state information... Donebuild-essential is already the newest version (12.4ubuntu1).zlib1g-dev is already the newest versi..." }, { "title": "AOSP 源码下载与编译", "url": "/android/2019/12/12/aosp-compile-source-code/", "categories": "android", "tags": "android, aosp", "date": "2019-12-12 02:31:44 +0800", "snippet": "本实验环境为 Ubuntu 18.04准备环境1、安装 openJDK8sudo apt install openjdk-8-jdk openjdk-8-source openjdk-8-doc2、如果编译 Android 6.0 以下的源码，需要安装 openjdk7（此安装源在 Ubuntu 18.04 已经被移除了，这里用 oracle jdk 7 代替）# step 1： 下载 jdk7 https://download.oracle.com/otn/java/jdk/7u80-b15/jdk-7u80-linux-x64.tar.gz?AuthParam=1570605801_..." }, { "title": "Android 输入子系统3：Java 层事件分发", "url": "/android/2019/12/12/android-input-subsystem-3/", "categories": "android", "tags": "android, framework", "date": "2019-12-12 02:31:44 +0800", "snippet": "涉及到的源代码及路径：frameworks/base/core/java/android/app/Activity.javaframeworks/base/core/java/com/android/internal/policy/PhoneWindow.javaframeworks/base/core/java/com/android/internal/policy/DecorView.javaframeworks/base/core/java/android/view/InputEventSender.javaframeworks/base/core/java/android/vie..." }, { "title": "串口工具 ckermit 安装与使用", "url": "/linux/2019/10/15/install-serial-port-tools-ckermit/", "categories": "linux", "tags": "linux", "date": "2019-10-15 02:14:14 +0800", "snippet": "安装与配置 1，安装 ckermit $ sudo apt install ckermit 2，验证软件版本 $ kermit --version 9.0.302 [9.0.302] 配置 ckermit 在 ～ 目录下创建 .kermrc 配置文件 $ touch .kermrc 在 .kermrc 中写入以下内容 # 如果使用的是USB线，那你就填ttyUSB0 # 如果是 9 针格的串口线，就填ttyS0 set line /dev/..." }, { "title": "Ubuntu 下通过源码安装 nodejs", "url": "/linux/2019/10/10/install-nodejs-via-binary-archive/", "categories": "linux", "tags": "linux", "date": "2019-10-10 01:12:23 +0800", "snippet": "Install Nodejs 1: open nodejs.org 2: choose Linux Binaries (x64) and download the binary archive file 3: open the ~/Download/ folder // make an installation directory$ mkdir -p `where/you/wanna/install/nodejs// unpack the archive file$ tar -xvf node-version-linux-x64.tar.xz -c installation_..." }, { "title": "Ubuntu 常见问题", "url": "/linux/2019/10/09/ubuntu-questions/", "categories": "linux", "tags": "linux", "date": "2019-10-09 20:00:25 +0800", "snippet": "apt install pkg_name$ sudo apt install sqlite[sudo] password for your_name: E: Could not get lock /var/lib/dpkg/lock-frontend - open (11: Resource temporarily unavailable)E: Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), is another process using it?$ rm /var/lib/dpkg/lock..." }, { "title": "面试总结", "url": "/android/2019/09/28/interview-summary/", "categories": "android", "tags": "android", "date": "2019-09-28 02:51:19 +0800", "snippet": "自我介绍李斌，河南南阳人，25 岁，2017/06毕业；从大四开始接触并学习 Android 到现在大概有三年了，毕业之后开始正式从事 Android 开发到现在，一共经历过两家公司；北京德惠众合信息技术有限公司，以即时通讯为核心的做移动办公的服务型公司，客户对象主要是政府、银行等企业机关，做定制化的 app 开发，目前参与了（内蒙公安厅、中原银行、江苏银行、建设银行、北京银行等）4/5个项目的开发；北京悦影科技有限公司，做新闻采编的一家公司，新闻素材的采集、合成、上传到发布等一些列流程，修改bug，离职之后就没有再过多的关注；寻求一份 Android 开发的岗位；个人比较喜欢杭州（气候..." }, { "title": "SQLite", "url": "/android/2019/09/27/sqlite/", "categories": "android", "tags": "android, framework", "date": "2019-09-27 19:24:03 +0800", "snippet": "SQLite数据类型 text integer blob多表联查SELECT * FROM emoji_list INNER JOIN emoji_group_list ON emoji_list.pack_uuid=emoji_group_list.uuid WHERE emoji_group_list.type=1 AND emoji_list.current_user_id=15909 ORDER BY id DESCSELECT emoji_group_list.uuid FROM emoji_group_list WHERE type=1SELECT * FROM emo..." }, { "title": "Service", "url": "/android/2019/09/27/service/", "categories": "android", "tags": "android, framework", "date": "2019-09-27 19:24:03 +0800", "snippet": " Android 平台四大组件之一，主要用来执行一些不与用户交互的长期运行的一些操作。Service 的声明 需要在 AndroidManifest.xml 文件中 application 节点中的 service 节点申明 apk 安装之后，PMS 从清单文件中解析 service 节点，并生成对应的数据结构Service 的分类后台服务 对用户而言是不可感知的，如后台文件下载 启动服务： startService() // Context.startService() -&amp;gt; ContextImpl.startServiceCommon() -[IPC 到..." }, { "title": "Fragment", "url": "/android/2019/09/27/fragment/", "categories": "android", "tags": "android", "date": "2019-09-27 19:24:03 +0800", "snippet": "Fragment生命周期 参考文章生命周期顺序public void onAttach(Context context) { // 执行此方法时，Fragment 已与 Activity 完成绑定 // context 即为 Activity 对象}public void onCreate(Bundle savedInstanceState) { // Fragment 初始化}public void onCreateView(LayoutInflater li, ViewGroup container, Bundle savedInstanceState) { ..." }, { "title": "umeng 数据库破解", "url": "/open-source/2019/09/02/crack-umeng-database/", "categories": "open-source", "tags": "open-source, android", "date": "2019-09-02 03:09:45 +0800", "snippet": "破解 umeng 数据库加密内容相关内容 sp 文件: umeng_general_config.xml sp 中一个key 为 ek__id 的值（945a824208d5647d） 数据库文件: ua.db生成加密秘钥/** * umeng 生成加密秘钥的的算法 * @param ek__id 存储在 SharedPreference 中的字符串，其 key 为 ek__id * SharedPreference 对应的文件为 umeng_general_config.xml **/public static String getEncryptKey(final String ..." }, { "title": "Handler 机制", "url": "/android/2019/09/02/handler/", "categories": "android", "tags": "android, framework", "date": "2019-09-02 02:51:19 +0800", "snippet": " Handler 与 Message、Looper 和 MessageQueue 及他们之间的相互关系称之为 Handler 机制Handler使用方式 方式一 final Handler mHandler = new Handler(new Handler.Callback() { @Override public boolean handleMessage(Message msg) { // 根据实际的业务逻辑决定返回值 return false; }}); 方式二 final Handler mHandler = new Ha..." }, { "title": "AOSP 切换分支", "url": "/android/2019/07/15/aosp-checkout-branch/", "categories": "android", "tags": "android, aosp", "date": "2019-07-15 17:43:57 +0800", "snippet": " 注：事先切换到源码目录下列出所有可切换的分支$ cd .repo/manifests$ git branch -a | cut -d / -f 3 [|grep android]切换到对应的分支$ repo init -b branch_name同步分支$ repo sync$ repo start branch_name --all查看当前分支$ repo branches" }, { "title": "OkHttp", "url": "/open-source/2019/07/08/okhttp/", "categories": "open-source", "tags": "open-source", "date": "2019-07-08 18:02:56 +0800", "snippet": "OkHttp核心Request methods: get, post, put, delete, patch, head HttpUrl: schema, host, port, url, queryNamesAndValues Headers: namesAndValues RequestBody MediaType mediaType type: text, image, audio, video, application, extension-token subtype: plain/x..." }, { "title": "03-AndroidManifest文件解析", "url": "/android/2019/04/17/AndroidManifest%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90/", "categories": "android", "tags": "framework, android", "date": "2019-04-17 07:17:07 +0800", "snippet": "03-AndroidManifest.xml文件解析分析 启动 app 时 AndroidManifest.xml 文件是何时解析的？Questtions 找不到解析入口在哪里？解决思路： LoadedApk.makeApplication() 方法里有个 clsName, 可以尝试反向查找 clsName 在哪里赋值的【未果】 网上搜一下【未果】 剩下的一种可能： 当应用下载安装完之后相关的信息就存储起来了，等到用的时候直接从缓存查询。 猜测：Launcher 维护了一个数据库，库里放的是桌面上所有展示应用的部..." }, { "title": "app 启动流程分析-2", "url": "/android/2019/04/13/app%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-02/", "categories": "android", "tags": "framework, android", "date": "2019-04-13 23:40:34 +0800", "snippet": "源码 基于 android 8.0 从 ActivityThread 的 main() 方法执行到页面显示开篇之前，先思考以下几个问题 Q1: Application 是如何创建的？ Q2: Application 的 attachBaseContext() 为什么会在 onCreate() 方法之前调用？ Q3: Activity 是如何被创建的？ Q4: Activity 的生命周期方法是如何被调用的？ Q5: PhoneWindow 是何时被创建的？ Q6: ContextImpl 是何时被创建的？ Q7: ViewRootImpl 是何时被创建的？ Q8: ap..." }, { "title": "Linux 下安装 AppImage 程序", "url": "/linux/2019/04/12/install-appimage-on-linux/", "categories": "linux", "tags": "linux", "date": "2019-04-12 22:53:21 +0800", "snippet": "安装步骤 修改文件权限，添加可执行权限 chmod u+x file.AppImage cd 文件所在目录，执行 ./file.AppImage 即可运行 添加启动图标 创建软连接 ln -s target src 创建桌面启动文件 touch xxx.desktop [Desktop Entry]Encoding=UTF-8Name=anything u likeExec=exex/path/to/ur/file or soft/link/for/ur/fileIcon=icon/path/for/ur/softwareTerminal=..." }, { "title": "app 启动流程源码分析-1", "url": "/android/2019/04/09/app%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-01/", "categories": "android", "tags": "framework, android", "date": "2019-04-09 05:38:47 +0800", "snippet": "源码 基于 android 8.0 从点击桌面 app 图标到 ActivityThread 的 main() 方法执行先来两张图(先凑合下吧，没找到合适的画图工具，找到了再补上=_=)Launcher/packages/apps/Launcher2/src/com/android/launcher2/Launcher.java 什么是 Launcher 通俗来讲，Launcher 就是我们常说的桌面，屏幕解锁后看到的界面就是 Launcher。 从代码层面来看 Launcher 本质上就是一个 Activity 并且实现了 View.onClickLis..." }, { "title": "objectbox 踩坑", "url": "/open-source/2019/04/07/objectbox/", "categories": "open-source", "tags": "database, open-source", "date": "2019-04-07 20:40:35 +0800", "snippet": "ObjectBox 数据库issues DB’s last entity ID 2 is higher than 1 from model 新老数据库不兼容会出现此问题，解决方法删除旧数据即可 new AndroidObjectBrowser(boxStore).start(context); 一直返回 false // 在子 module 目录下做如下配置 buildscript { ext.objectbox_version = &#39;2.3.1&#39; repositories { jcenter() ..." }, { "title": "Linux 常用命令", "url": "/linux/2019/04/07/linux-commands/", "categories": "linux", "tags": "linux", "date": "2019-04-07 20:40:01 +0800", "snippet": "常用命令 ls：list 缩写，目录下文件 cd：change directory 缩写，转换目录 cp：拷贝文件或目录 mv：移动或者重命名 rm：删除文件或者目录 rm [-f --force][-r --recursive] touch：创建文本文件 less：列出文件内容，与 more 的区别是此命令只列出一页，按下 space 键会列出下一页 more：列出文件的内容，是全部内容 tail find：查找文件 # 在 dir 下查找 keywordfind [dir] -name [keyword]# 排除文件夹：-name 指定文件..." }, { "title": "Ubuntu 下安装 gitlab ce", "url": "/linux/2019/04/07/install-gitlab-ce/", "categories": "linux", "tags": "linux", "date": "2019-04-07 20:39:14 +0800", "snippet": "install gitlab-ce on Ubuntu 16.04 参考官方文档 安装相关的依赖包：curl, openssh-server, ca-certificates, postfix $ sudo apt install curl ca-certificates $ sudo apt install openssh-server ```bash # 可能会遇到版本不兼容的问题，解决办法是安装控制台输出推荐的版本, 然后重新执行此条命令 The following information may help to resolve the sit..." }, { "title": "build-idegen-jar", "url": "/android/2019/01/21/build-idegen-jar/", "categories": "android", "tags": "android, aosp", "date": "2019-01-21 18:40:09 +0800", "snippet": "sleticalboy@Lee:/media/sleticalboy/android-os/AOSP$ mmm development/tools/idegen/make: Entering directory &#39;/media/sleticalboy/android-os/AOSP&#39;============================================PLATFORM_VERSION_CODENAME=RELPLATFORM_VERSION=8.0.0TARGET_PRODUCT=aosp_armTARGET_BUILD_VARIANT=engTARGE..." }, { "title": "aosp 编译、工具等记录", "url": "/android/2019/01/21/build-aosp/", "categories": "android", "tags": "android, aosp", "date": "2019-01-21 18:40:09 +0800", "snippet": "编译系统Android 平台提供三种指令来编译： make：不带参数，编译整个系统，时间比较久； mmm：编译单个模块，比如：mmm packages/apps/Settings， mm：编译单个模块，需要进入该模块目录，比如：cd packags/apps/Settings &amp;amp;&amp;amp; mm make module_name：编译单个模块，需要知道模块名，且编译时会编译该模块所依赖的所有其他模块编译成功的标志：#### make completed successfully (02:37:19 (hh:mm:ss)) ####为 clion 编译出 C..." }, { "title": "Android 应用崩溃", "url": "/book/2019/01/20/android-enhance-01-app-crash/", "categories": "book", "tags": "android, book", "date": "2019-01-20 23:50:20 +0800", "snippet": "关于崩溃 崩溃类型 Java 崩溃就是在 Java 代码中，出现了未捕获异常，导致程序异常退出。 Native 崩溃一般是因为在 native 层访问了非法地址，又或者地址对齐出现了问题, 又或者发生了程序主动 abort, 从而产生 singal 信号，导致程序异常退出。 如何分析 app 崩溃" }, { "title": "Java IO", "url": "/book/2019/01/20/IO/", "categories": "book", "tags": "book, java", "date": "2019-01-20 23:50:20 +0800", "snippet": "Java IO 同步和异步 阻塞和非阻塞bio: 传统的 io 方式，同步、阻塞 io 程序 java.io 包下提供的 API，基于流模型实现 File InputStream OutputStrean FileReader FileWriternio: jdk 1.4 提供，多路复用、同步非阻塞 io 程序 java.nio 包下提供的 API Channel Selector Bufferaio: jdk 1.7 中改进的 nio，异步非阻塞 io 程序 改进的 nio" }, { "title": "Retrofit", "url": "/open-source/2019/01/17/retrofit/", "categories": "open-source", "tags": "open-source", "date": "2019-01-17 07:21:15 +0800", "snippet": "网络请求适配器，使用 Java 动态代理技术将请求接口动态生成实现类，将网络请求的细节隐藏，并支持各种格式转换需要跟 OkHttp 配合使用，如果想要自己实现，需要拿源码自己改动@GET @POST @Field @FormUrlEncode @Headers @QueryMapRetrofitcreate()ServiceMethod参数适配builder 模式动态代理模式工厂模式适配器模式观察者模式？" }, { "title": "okio", "url": "/open-source/2019/01/17/okio/", "categories": "open-source", "tags": "open-source", "date": "2019-01-17 07:21:15 +0800", "snippet": "Okio Source -read() -close() -timeout() |– BufferedSource |– RealBufferedSource |– GzipSource |– ForwardingSource |– InflateSource Sink write() flush() close() timeout() |– BufferedSink |– RealBufferedSink |– GzipSink |– ForwardingSink ..." }, { "title": "Glide 图片加载框架", "url": "/open-source/2019/01/17/glide/", "categories": "open-source", "tags": "open-source", "date": "2019-01-17 07:21:15 +0800", "snippet": "流程梳理使用 Glide.with().load().into() Glide.with() -&amp;gt; RequestManager RequestManager.load() -&amp;gt; DrawableTypeRequest(GenericRequestBuilder) GenericRequestBuilder.into() -&amp;gt; Target图片加载流程 com.bumptech.glide.load.engine.Engine1、调用 Engine#load() 方法加载图片：public &amp;lt;T, Z, R&amp;gt; ..." }, { "title": "fast-json", "url": "/open-source/2019/01/17/fast-json/", "categories": "open-source", "tags": "open-source", "date": "2019-01-17 07:21:15 +0800", "snippet": "Alibaba Fastjsonjson string 转 Object json string -&amp;gt; JavaBean Person person = JSON.parseObject(json, Person.class);// 或者Person person = JSON.parseObject(json, new TypeReference&amp;lt;Person&amp;gt;() {}); json -&amp;gt; Map Map&amp;lt;String, Person&amp;gt; map = JSON.parseOb..." }, { "title": "Android 系统的 MediaPlayer", "url": "/book/2019/01/17/android-mediaplayer/", "categories": "book", "tags": "book, android", "date": "2019-01-17 07:21:15 +0800", "snippet": "状态图及生命周期 正常流程 idle：空闲状态 调用了 reset() 方法 initialized：初始化完成 调用了 setDataSource() 方法 preparing 调用了 prepareAsync() 方法，当资源就绪会回调 onPrepared() 方法 prepared 调用了 prepare() 方法..." }, { "title": "日常问题记录", "url": "/android/2019/01/17/Daily-Question-Record/", "categories": "android", "tags": "android, java", "date": "2019-01-17 07:21:15 +0800", "snippet": "ViewTextView 文字阴影效果 &amp;lt; TextView android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:shadowColor=&quot;#8000&quot; android:shadowDx=&quot;3&quot; android:shadowDy=&quot;3&quot; android:shadowRadius=&quot;2&quot; android:textColor=&q..." } ]
